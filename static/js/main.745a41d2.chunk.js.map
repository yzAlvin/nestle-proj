{"version":3,"sources":["Brands.tsx","Search.tsx","App.tsx","index.tsx"],"names":["Brands","prop","brands","length","map","brand","className","name","href","link","nestleBrands","reduce","prev","curr","b","includes","concat","Array","Search","useState","setBrands","searchTerm","setSearchTerm","useEffect","filter","toLowerCase","type","onChange","e","target","value","placeholder","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oMAmBeA,EAjBA,SAACC,GACd,OAAIA,EAAKC,OAAOC,OAAS,EAErB,mCACGF,EAAKC,OAAOE,KAAI,SAACC,GAAD,OACf,sBAAsBC,UAAWD,EAAME,KAAvC,UACE,6BAAKF,EAAME,OACX,mBAAGC,KAAMH,EAAMI,KAAf,SAAsBJ,EAAMI,SAFpBJ,EAAME,WAQf,iDCTLG,E,KAAmCC,QACvC,SAACC,EAAMC,GAAP,OACED,EAAKR,KAAI,SAACU,GAAD,OAAOA,EAAEP,QAAMQ,SAASF,EAAKN,MAClCK,EACA,YAAIA,GAAMI,OAAO,CAACH,MACxB,IAAII,OA+BSC,EA5BA,WAAO,IAAD,EACSC,mBAAST,GADlB,mBACZR,EADY,KACJkB,EADI,OAEiBD,mBAAS,IAF1B,mBAEZE,EAFY,KAEAC,EAFA,KAgBnB,OARAC,qBAAU,WACRH,EACEV,EAAac,QAAO,SAACnB,GAAD,OAClBA,EAAME,KAAKkB,cAAcV,SAASM,EAAWI,qBAGhD,CAACJ,IAGF,qCACE,uBACEK,KAAK,OACLC,SAhBiB,SAACC,GACtBN,EAAcM,EAAEC,OAAOC,QAgBnBC,YAAY,wBAEd,cAAC,EAAD,CAAQ7B,OAAQA,QCfP8B,EApBH,WACV,OACE,qCACE,mCACE,wCACA,mIAMF,cAAC,EAAD,IAEA,+CACW,mBAAGxB,KAAK,uCAAR,iCCXjByB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U","file":"static/js/main.745a41d2.chunk.js","sourcesContent":["import { NestleBrand } from \"./NestleBrand\";\n\nconst Brands = (prop: { brands: NestleBrand[] }) => {\n  if (prop.brands.length > 0) {\n    return (\n      <>\n        {prop.brands.map((brand) => (\n          <div key={brand.name} className={brand.name}>\n            <h3>{brand.name}</h3>\n            <a href={brand.link}>{brand.link}</a>\n          </div>\n        ))}\n      </>\n    );\n  } else {\n    return <p>No brands found</p>;\n  }\n};\n\nexport default Brands;\n","import { ChangeEvent, useEffect, useState } from \"react\";\nimport Brands from \"./Brands\";\nimport _nestleData from \"./nestle.json\";\nimport { NestleBrand } from \"./NestleBrand\";\n\nconst scrapedNestleBrands = _nestleData as NestleBrand[];\nconst nestleBrands = scrapedNestleBrands.reduce(\n  (prev, curr) =>\n    prev.map((b) => b.name).includes(curr.name)\n      ? prev\n      : [...prev].concat([curr]),\n  new Array<NestleBrand>()\n);\n\nconst Search = () => {\n  const [brands, setBrands] = useState(nestleBrands);\n  const [searchTerm, setSearchTerm] = useState(\"\");\n\n  const editSearchTerm = (e: ChangeEvent<HTMLInputElement>) => {\n    setSearchTerm(e.target.value);\n  };\n\n  useEffect(() => {\n    setBrands(\n      nestleBrands.filter((brand) =>\n        brand.name.toLowerCase().includes(searchTerm.toLowerCase())\n      )\n    );\n  }, [searchTerm]);\n\n  return (\n    <>\n      <input\n        type=\"text\"\n        onChange={editSearchTerm}\n        placeholder=\"Search for a brand!\"\n      />\n      <Brands brands={brands} />\n    </>\n  );\n};\n\nexport default Search;\n","import Search from \"./Search\";\n\nconst App = () => {\n  return (\n    <>\n      <header>\n        <h1>nestle</h1>\n        <p>\n          for their horrible schemes extending from child labor to exploiting\n          poor communities for water.\n        </p>\n      </header>\n\n      <Search />\n\n      <footer>\n        inspo by <a href=\"https://www.reddit.com/r/FuckNestle/\">r/fucknestle</a>\n      </footer>\n    </>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}